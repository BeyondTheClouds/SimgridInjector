* VM load Injector (JAVA)
- Contact: Adrien.Lebre@inria.fr
- JAVA
- https://github.com/BeyondTheClouds/SimgridInjector

** Description
A dedicated framework to evaluate and compare VM placement  algorithms.
At coarse-grained, the framework is composed of two major components: the injector and the VM placement algorithm.
The injector is the generic part of the framework (i.e. the one you can directly use) while the VM placement algorithm is the part you want to study (or compare with available algorithms).

The injector makes load changes of VMs during a predefined time:
Every t seconds, the injector selects one VM and changes its CPU load according to a
Gaussian distribution. t is a random variable that follows an exponential distribution
with rate parameter \lambda. The Gaussian distribution is defined by a mean as (i.e mu)
well as a standard deviation (i.e. sigma) that are given at the beginning of each simulation.
The parameters of the simulation are defined in the ''simulator.properties'' file available in the ''config'' directory.
By default, the duration of each experiment is set to 3600 seconds. The parameters are lambda=Nb_VMs/300 and mu=70, sigma=30.
Concretely, the load of each VM starts from 0% and varies on average every 5 minutes in steps of 10 (with a significant part between 40% and 100% of CPU
usage).

To change these parameters, please edit config/simulator.properties

At the beginning, the simulation create n VMs, each of which is based on one of predefined VM classes. A VM class is a
template of the specification of a VM and its workload. It is described as
nb_cpu:ramsize:net_bw:mig_speed:mem_speed. VMs are launched on PMs in a round-robin manner, i.e., each PM has almost the same number of VMs.
According to the investigated algorithm, VMs are relocated through the different PMs during the whole execution of the simulation.

The ultimate objective of the Simgrid Injector VM framework is to deliver a building block that will enable to compare fairly different VM placement algorithms.

** Launcher
Once you have configured the different parameters of your simulation (config/simulator.properties), you can run the simulation by executing the simulation.Main class.
As Simgrid requires several parameters to run, we encourage you to use either Eclipse or Intellij.
Under one of these environments, create a new configuration for launching the simulation.Main class and add the following information:
VM Options:  -Xmx4G -d64 -Dlogback.configurationFile=config/logback.xml
Program arguments: ./config/cluster_platform.xml ./config/generated_deploy.xml  --cfg=cpu/optim:Full --cfg=tracing:1  --cfg=tracing/filename:simu.trace --cfg=tracing/platform:1
Logs (if exists): ./logs/console.log

** Implement/evaluate a new algorithm
TODO - Describe the process to add a new scheduler into the injector
